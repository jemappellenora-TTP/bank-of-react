{"version":3,"sources":["components/AccountBalance.jsx","components/Home.jsx","components/UserProfile.jsx","LogIn.js","components/AddDebitsForm.jsx","components/Debits.jsx","components/AddCreditsForm.jsx","components/Credits.jsx","App.js","serviceWorker.js","index.js"],"names":["AccountBalance","props","debitsSum","creditsSum","Home","src","alt","to","this","debits","credits","Component","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","htmlFor","type","onChange","AddDebitsForm","event","updatedCard","debitsInfo","updateCurrentCard","allCards","currentCards","push","update","description","amount","date","className","placeholder","Debits","displayBalance","addDebits","updateDebits","intCards","allDebits","found","items","totalCards","length","i","key","onClick","AddCreditsForm","creditsInfo","Credits","addCredits","updateCredits","allCredits","App","updateCreditsSum","updateDebitsSum","logInInfo","newUser","currentUser","axios","get","then","response","data","newCreditsInfo","catch","err","console","log","newDebitsInfo","exact","path","render","updateSum","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9480800a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// Presentational Component;\r\n// It has no state nor lifecycle methods;\r\n// All it does, and all it ever will do, is render HTML + JavaScript aka JSX;\r\nfunction AccountBalance(props) {\r\n    return <h4>{props.debitsSum-props.creditsSum}</h4>\r\n}\r\n\r\nexport default AccountBalance;","import React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <img src=\"https://bsmedia.business-standard.com/_media/bs/img/article/2015-08/28/full/1440706704-1419.jpg\" alt=\"bank\"/>\r\n          <h1>Bank of React</h1>\r\n          <Link to=\"/Debits\">Debits</Link>\r\n          <br/>\r\n          <Link to=\"/Credits\">Credits</Link>\r\n          <br/>\r\n          <Link to=\"/userProfile\">User Profile</Link>\r\n          <br/>\r\n          <Link to=\"/LogIn\">Login to Your Account</Link>\r\n          <p/>\r\n          <div>Account Balance: <AccountBalance debitsSum={this.props.debits} creditsSum={this.props.credits}/></div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <h1>User Profile</h1>\r\n\r\n          <div>Username: {this.props.userName}</div>\r\n          <div>Member Since: {this.props.memberSince}</div>\r\n          <Link to=\"/\">Back to Home</Link>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass LogIn extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      user: {\r\n        userName: '',\r\n        password: ''\r\n      },\r\n      redirect: false\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user}\r\n    //using spread operator to append to user state\r\n    const inputField = e.target.name\r\n    const inputValue = e.target.value\r\n    updatedUser[inputField] = inputValue\r\n\r\n    this.setState({user: updatedUser})\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)\r\n    this.setState({redirect: true})\r\n  }\r\n\r\n  render () {\r\n    if (this.state.redirect) {\r\n      return (<Redirect to=\"/userProfile\"/>)\r\n      //if the form is filled we will be redirected to our userProfile Page\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"userName\">User Name</label>\r\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LogIn","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass AddDebitsForm extends Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            debitsInfo : {\r\n                description: \"\",\r\n                amount: 0,\r\n                date: \"2020-06-20 T15:36:09.609Z\"\r\n            },\r\n            redirect:false,\r\n        }\r\n      }\r\n    handleChange=(event)=>{\r\n        const updatedCard = {...this.state.debitsInfo}\r\n        const inputField = event.target.name\r\n        const inputValue = event.target.value\r\n        updatedCard[inputField] = inputValue\r\n        this.setState({debitsInfo: updatedCard})\r\n      }\r\n\r\n    updateCurrentCard = (event) => {\r\n        event.preventDefault()\r\n        const allCards=this.props.currentCards\r\n        allCards.push(this.state.debitsInfo)\r\n        this.props.update(allCards)\r\n        this.setState({redirect: true});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return (<Redirect to=\"/Debits\"/>)\r\n            //if the form is filled we will be redirected to our userProfile Page\r\n          }\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.updateCurrentCard}>\r\n                    <div>\r\n                        <label>Add new Debits description</label>\r\n                        <input type=\"text\" name=\"description\" className=\"debitsInfo\" placeholder=\"description...\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div>\r\n                        <label>Add newDebits amount</label>\r\n                        <input type=\"number\" name=\"amount\" className=\"debitsInfo\" placeholder=\"amount...\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <button>Add Card</button>\r\n                </form>\r\n            </div>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nexport default AddDebitsForm;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AccountBalance from './AccountBalance';\r\nimport AddDebitsForm from './AddDebitsForm'\r\n\r\nclass Debits extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            allDebits:[],\r\n            displayBalance: false,\r\n            addDebits: false,\r\n            found: true,\r\n        }\r\n\r\n   }\r\n\r\n    displayBalance=()=>{\r\n        this.state.displayBalance?this.setState({displayBalance: false }):this.setState({displayBalance: true })\r\n    }\r\n\r\n    addDebits=()=>{\r\n        this.state.addDebits?this.setState({addDebits: false }):this.setState({addDebits: true })\r\n    }\r\n\r\n    updateDebits=()=>{\r\n        const intCards= this.props\r\n        this.setState({allDebits: intCards})\r\n    }\r\n\r\n    render() {\r\n        const creditsSum = this.props.creditsSum;\r\n        const items = [];\r\n        let debitsSum= 0;\r\n        let totalCards= [...this.props.debits].length\r\n        if (this.state.found){ \r\n            for(let i=totalCards-1; i>=0;i--){\r\n                debitsSum= debitsSum+ this.props.debits[i].amount;\r\n                items.push(\r\n                    <div key={i}>\r\n                        <h5>Debitcard #{i+1}</h5>\r\n                        <p>\r\n                            <li>{this.props.debits[i].description} </li>\r\n                            <li>{this.props.debits[i].amount} </li>\r\n                            <li>{this.props.debits[i].date} </li>\r\n                        </p>\r\n                    </div>)\r\n            }\r\n        }\r\n        return (\r\n             <div>\r\n                 <h1>Debits</h1>\r\n                 <Link to=\"/\">Back to Home</Link>\r\n                 <button onClick={this.displayBalance}>Display Balance</button>\r\n                    {(this.state.displayBalance)?<>\r\n                        <p>Account Balance: <AccountBalance debitsSum={debitsSum} creditsSum={creditsSum}/></p>\r\n                        <p>Debits : {debitsSum}</p>\r\n                        <p>Credits : {creditsSum}</p></>\r\n                        :\"\"} \r\n                 \r\n                 <button onClick={this.addDebits}>Add Card</button>\r\n                    {(this.state.addDebits)?<AddDebitsForm currentCards={this.props.debits} update={this.updateDebits}/>:\"\"} \r\n                {items}\r\n                 \r\n                    \r\n\r\n                \r\n             </div>\r\n         );\r\n     }\r\n}\r\n\r\nexport default Debits;","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass AddCreditsForm extends Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            creditsInfo : {\r\n                description: \"\",\r\n                amount: 0,\r\n                date: \"2020-06-20 T15:36:09.609Z\"\r\n            },\r\n            redirect:false,\r\n        }\r\n      }\r\n    handleChange=(event)=>{\r\n        const updatedCard = {...this.state.creditsInfo}\r\n        const inputField = event.target.name\r\n        const inputValue = event.target.value\r\n        updatedCard[inputField] = inputValue\r\n        this.setState({creditsInfo: updatedCard})\r\n      }\r\n\r\n    updateCurrentCard = (event) => {\r\n        event.preventDefault()\r\n        const allCards=this.props.currentCards\r\n        allCards.push(this.state.creditsInfo)\r\n        this.props.update(allCards)\r\n        this.setState({redirect: true});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return (<Redirect to=\"/Credits\"/>)\r\n            //if the form is filled we will be redirected to our userProfile Page\r\n          }\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.updateCurrentCard}>\r\n                    <div>\r\n                        <label>Add new Credit description</label>\r\n                        <input type=\"text\" name=\"description\" className=\"creditsInfo\" placeholder=\"description...\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div>\r\n                        <label>Add newCredit amount</label>\r\n                        <input type=\"number\" name=\"amount\" className=\"creditsInfo\" placeholder=\"amount...\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <button>Add Card</button>\r\n                </form>\r\n            </div>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nexport default AddCreditsForm;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AccountBalance from './AccountBalance';\r\nimport AddCreditsForm from './AddCreditsForm'\r\n\r\nclass Credits extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            allCredits:[],\r\n            displayBalance: false,\r\n            addCredits: false,\r\n            found: true,\r\n        }\r\n\r\n   }\r\n\r\n    displayBalance=()=>{\r\n        this.state.displayBalance?this.setState({displayBalance: false }):this.setState({displayBalance: true })\r\n    }\r\n\r\n    addCredits=()=>{\r\n        this.state.addCredits?this.setState({addCredits: false }):this.setState({addCredits: true })\r\n    }\r\n\r\n    updateCredits=()=>{\r\n        const intCards= this.props\r\n        this.setState({allCredits: intCards})\r\n    }\r\n\r\n    render() {\r\n        const debitsSum = this.props.debitsSum;\r\n        \r\n        const items = [];\r\n        let creditsSum= 0;\r\n        let totalCards= [...this.props.credits].length\r\n        if (this.state.found){ \r\n            for(let i=totalCards-1; i>=0;i--){\r\n                creditsSum= creditsSum+ this.props.credits[i].amount;\r\n                items.push(\r\n                    <div key={i}>\r\n                        <h5>Creditcard #{i+1}</h5>\r\n                        <p>\r\n                            <li>{this.props.credits[i].description} </li>\r\n                            <li>{this.props.credits[i].amount} </li>\r\n                            <li>{this.props.credits[i].date} </li>\r\n                        </p>\r\n                    </div>)\r\n            }\r\n        }\r\n        return (\r\n             <div>\r\n                 <h1>Credits</h1>\r\n                 <Link to=\"/\">Back to Home</Link>\r\n                 <button onClick={this.displayBalance}>Display Balance</button>\r\n                    {(this.state.displayBalance)?<>\r\n                        <AccountBalance debitsSum={debitsSum} creditsSum={creditsSum}/>\r\n                        <p>Debits : {debitsSum}</p>\r\n                        <p>Credits : {creditsSum}</p></>:\r\n                    \"\"} \r\n                 \r\n                 <button onClick={this.addCredits}>Add Card</button>\r\n                    {(this.state.addCredits)?<AddCreditsForm currentCards={this.props.credits} update={this.updateCredits}/>:\"\"} \r\n                {items}\r\n                 \r\n                    \r\n                    \r\n                 {/* Debits: {accountBalance} */}\r\n                 {/* Balance: {this.props.accountBalance} */}\r\n                \r\n             </div>\r\n         );\r\n     }\r\n}\r\n\r\nexport default Credits;","import React, {Component} from 'react';\r\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\r\nimport \"./App.css\"\r\nimport Home from './components/Home'\r\nimport UserProfile from './components/UserProfile'\r\nimport LogIn from './LogIn'\r\nimport Debits from './components/Debits'\r\nimport Credits from './components/Credits'\r\nimport axios from \"axios\"\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      creditsInfo:[],\r\n      debitsInfo: [],\r\n      creditsSum:0,\r\n      debitsSum:0,\r\n      currentUser:{\r\n        userName:'Dummy User',\r\n        memberSince: '08/23/99',\r\n      }\r\n    }\r\n  }\r\n  \r\n  componentDidMount(){\r\n    //where we pass info to the API call\r\n   axios\r\n      .get(`https://moj-api.herokuapp.com/credits`)\r\n        .then(response=> {\r\n           const data = response.data;\r\n           let creditsSum = 0;\r\n           const newCreditsInfo = [];\r\n           for(let i=0; i<data.length;i++){\r\n              newCreditsInfo.push(data[i])\r\n              creditsSum += data[i].amount\r\n           }\r\n            this.setState({creditsInfo: newCreditsInfo});\r\n            this.setState({creditsSum: creditsSum});\r\n            this.setState({found:true});\r\n        })\r\n        .catch(err=>console.log(err))\r\n\r\n  axios\r\n    .get(`https://moj-api.herokuapp.com/debits`)\r\n      .then(response=> {\r\n        const data = response.data;\r\n        let debitsSum = 0;\r\n        const newDebitsInfo = [];\r\n           for(let i=0; i<data.length;i++){\r\n              newDebitsInfo.push(data[i])\r\n              debitsSum += data[i].amount\r\n           }\r\n            this.setState({debitsInfo: newDebitsInfo});\r\n            this.setState({debitsSum: debitsSum});\r\n            this.setState({found:true});\r\n        })\r\n        .catch(err=>console.log(err))\r\n  \r\n  }\r\n\r\n  updateCreditsSum=()=>{\r\n    let value = this.props\r\n    this.setState({creditsSum: value})\r\n  }\r\n  \r\n  updateDebitsSum=()=>{\r\n    let value = this.props\r\n    this.setState({debitsSum: value})\r\n  }\r\n\r\n  mockLogIn=(logInInfo)=>{\r\n    const newUser={...this.state.currentUser} //inherate attributes of this.state.currentUser\r\n    newUser.userName = logInInfo.userName\r\n    this.setState({currentUser: newUser})\r\n  }\r\n  \r\n  render() {\r\n    // for(let i=0; i<this.state.creditsInfo.length;i++){\r\n    //   creditsSum= creditsSum+ this.state.creditsInfo[i].amount;\r\n    // }\r\n    // for(let i=0; i<this.state.debitsInfo.length;i++){\r\n    //   debitsSum= debitsSum+ this.state.debitsInfo[i].amount;\r\n    // }\r\n    // console.log(creditsSum)\r\n\r\n    const HomeComponent=()=>(<Home debits={this.state.debitsSum} credits={this.state.creditsSum}/>);\r\n    const UserProfileComponent=()=>(<UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince}/>);\r\n    const LogInComponent=()=>(<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn}{...this.props}/>)\r\n    const DebitsComponent=()=>(<Debits debits={this.state.debitsInfo} creditsSum={this.state.creditsSum} updateSum={this.updateDebitsSum}/>)\r\n    const CreditsComponent=()=>(<Credits credits={this.state.creditsInfo} debitsSum={this.state.debitsSum} updateSum={this.updateCreditsSum}/>)\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent}/>\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\r\n          <Route exact path=\"/login\" render={LogInComponent}/>\r\n          <Route exact path=\"/Debits\" render={DebitsComponent}/>\r\n          <Route exact path=\"/Credits\" render={CreditsComponent}/>\r\n        </div>    \r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}